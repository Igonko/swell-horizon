import fs from 'fs';
import { request } from 'undici';
import * as dotenv from 'dotenv';
import { generateCssVars } from './styles.mjs';
import { generateFontLinks } from './fonts.mjs';
import { generateFontFiles } from './fonts-node.mjs';

dotenv.config();

(async () => {
  const settings = await fetchSettings();
  const cssVars = generateCssVars(settings);
  saveStyles(cssVars);
  const fontLinks = generateFontLinks(settings?.typography?.font_family);
  generateFontFiles(fontLinks);
})();

async function fetchSettings() {
  const authorization = `Basic ${Buffer.from(
    process.env.NEXT_PUBLIC_SWELL_PUBLIC_KEY ?? '',
  ).toString('base64')}`;

  const { body } = await request(
    `${process.env.NEXT_PUBLIC_SWELL_STORE_URL}/api/settings`,
    {
      headers: {
        'Content-Type': 'application/json',
        authorization,
      },
    },
  );

  return await body.json();
}

function saveStyles(cssVars) {
  const vars = cssVars.map((cssVar) => `  ${cssVar}`); // add indentation
  const content = [
    '/* AUTOGENERATED */',
    "@import './fonts.css';",
    '',
    ':root {',
    ...vars,
    '}',
    '',
  ].join('\n');
  fs.writeFileSync('./styles/theme.css', content);
}
